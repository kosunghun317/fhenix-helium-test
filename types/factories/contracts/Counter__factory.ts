/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Counter, CounterInterface } from "../../contracts/Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotMessageSender",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint32",
        name: "encryptedValue",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint32",
        name: "encryptedValue",
        type: "tuple",
      },
    ],
    name: "div",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint32",
        name: "encryptedValue",
        type: "tuple",
      },
    ],
    name: "divManyTimes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "getCounterPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "getCounterPermitSealed",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040518060400160405280601181526020017f4668656e6978205065726d697373696f6e0000000000000000000000000000008152506040518060400160405280600381526020017f312e300000000000000000000000000000000000000000000000000000000000815250620000956000836200019160201b90919060201c565b6101208181525050620000b36001826200019160201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620000f2620001e960201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000185633b9aca006200024660201b60201c565b60028190555062000b9f565b6000602083511015620001b757620001af836200026260201b60201c565b9050620001e3565b82620001c983620002cf60201b60201c565b6000019081620001da919062000679565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200022b959493929190620007d1565b60405160208183030381529060405280519060200120905090565b60006200025b826002620002d960201b60201c565b9050919050565b600080829050601f81511115620002b257826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620002a99190620008bd565b60405180910390fd5b805181620002c09062000913565b60001c1760001b915050919050565b6000819050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c46200030b866200039060201b60201c565b856040518363ffffffff1660e01b81526004016200032b929190620009f3565b600060405180830381865afa15801562000349573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019062000374919062000b4e565b90506200038781620003f160201b60201c565b91505092915050565b6060602067ffffffffffffffff811115620003b057620003af6200040a565b5b6040519080825280601f01601f191660200182016040528015620003e35781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048157607f821691505b60208210810362000497576200049662000439565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004c2565b6200050d8683620004c2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200055a620005546200054e8462000525565b6200052f565b62000525565b9050919050565b6000819050919050565b620005768362000539565b6200058e620005858262000561565b848454620004cf565b825550505050565b600090565b620005a562000596565b620005b28184846200056b565b505050565b5b81811015620005da57620005ce6000826200059b565b600181019050620005b8565b5050565b601f8211156200062957620005f3816200049d565b620005fe84620004b2565b810160208510156200060e578190505b620006266200061d85620004b2565b830182620005b7565b50505b505050565b600082821c905092915050565b60006200064e600019846008026200062e565b1980831691505092915050565b60006200066983836200063b565b9150826002028217905092915050565b6200068482620003ff565b67ffffffffffffffff811115620006a0576200069f6200040a565b5b620006ac825462000468565b620006b9828285620005de565b600060209050601f831160018114620006f15760008415620006dc578287015190505b620006e885826200065b565b86555062000758565b601f19841662000701866200049d565b60005b828110156200072b5784890151825560018201915060208501945060208101905062000704565b868310156200074b578489015162000747601f8916826200063b565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b620007758162000760565b82525050565b620007868162000525565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007b9826200078c565b9050919050565b620007cb81620007ac565b82525050565b600060a082019050620007e860008301886200076a565b620007f760208301876200076a565b6200080660408301866200076a565b6200081560608301856200077b565b620008246080830184620007c0565b9695505050505050565b600082825260208201905092915050565b60005b838110156200085f57808201518184015260208101905062000842565b60008484015250505050565b6000601f19601f8301169050919050565b60006200088982620003ff565b6200089581856200082e565b9350620008a78185602086016200083f565b620008b2816200086b565b840191505092915050565b60006020820190508181036000830152620008d981846200087c565b905092915050565b600081519050919050565b6000819050602082019050919050565b60006200090a825162000760565b80915050919050565b60006200092082620008e1565b826200092c84620008ec565b90506200093981620008fc565b925060208210156200097c57620009777fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620004c2565b831692505b5050919050565b600082825260208201905092915050565b6000620009a182620008e1565b620009ad818562000983565b9350620009bf8185602086016200083f565b620009ca816200086b565b840191505092915050565b600060ff82169050919050565b620009ed81620009d5565b82525050565b6000604082019050818103600083015262000a0f818562000994565b905062000a206020830184620009e2565b9392505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b62000a50826200086b565b810181811067ffffffffffffffff8211171562000a725762000a716200040a565b5b80604052505050565b600062000a8762000a27565b905062000a95828262000a45565b919050565b600067ffffffffffffffff82111562000ab85762000ab76200040a565b5b62000ac3826200086b565b9050602081019050919050565b600062000ae762000ae18462000a9a565b62000a7b565b90508281526020810184848401111562000b065762000b0562000a40565b5b62000b138482856200083f565b509392505050565b600082601f83011262000b335762000b3262000a3b565b5b815162000b4584826020860162000ad0565b91505092915050565b60006020828403121562000b675762000b6662000a31565b5b600082015167ffffffffffffffff81111562000b885762000b8762000a36565b5b62000b968482850162000b1b565b91505092915050565b60805160a05160c05160e051610100516101205161014051611bc962000bfa60003960006106950152600061065a01526000610d0201526000610ce1015260006107150152600061076b015260006107940152611bc96000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638ada066e1161005b5780638ada066e146101195780638da5cb5b14610137578063ab07a95614610155578063d2c09fd21461018557610088565b80635ef89f331461008d5780636cc44bf3146100bd57806384b0196e146100d9578063859fc542146100fd575b600080fd5b6100a760048036038101906100a291906112fc565b6101a1565b6040516100b4919061135e565b60405180910390f35b6100d760048036038101906100d2919061139d565b61028f565b005b6100e16102f1565b6040516100f497969594939291906115ae565b60405180910390f35b6101176004803603810190610112919061139d565b61039b565b005b6101216103c7565b60405161012e919061135e565b60405180910390f35b61013f6103df565b60405161014c9190611632565b60405180910390f35b61016f600480360381019061016a91906112fc565b610405565b60405161017c919061164d565b60405180910390f35b61019f600480360381019061019a919061139d565b6104f2565b005b60008160006101fb7f6bdaeb2d29561f159c7ef98b16b27015fb2aeb87209c7ee656226d912f59927d83600001516040516020016101e092919061166f565b6040516020818303038152906040528051906020012061051e565b9050600061020d828460200151610538565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610274576040517f3093a27700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61027f600254610564565b63ffffffff169350505050919050565b60006102a38261029e906116f0565b610627565b90506102b16002548261063d565b6002819055506102c36002548261063d565b6002819055506102d56002548261063d565b6002819055506102e76002548261063d565b6002819055505050565b600060608060008060006060610305610651565b61030d61068c565b46306000801b600067ffffffffffffffff81111561032e5761032d611120565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60006103af826103aa906116f0565b610627565b90506103bd600254826106c7565b6002819055505050565b60006103d4600254610564565b63ffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606081600061045f7f6bdaeb2d29561f159c7ef98b16b27015fb2aeb87209c7ee656226d912f59927d836000015160405160200161044492919061166f565b6040516020818303038152906040528051906020012061051e565b90506000610471828460200151610538565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104d8576040517f3093a27700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e860025486600001516106db565b9350505050919050565b600061050682610501906116f0565b610627565b90506105146002548261063d565b6002819055505050565b600061053161052b610711565b836107c8565b9050919050565b6000806000806105488686610809565b9250925092506105588282610865565b82935050505092915050565b600061056f826109c9565b6105805761057d60006109d6565b91505b60008290506000610590826109ea565b90506000608073ffffffffffffffffffffffffffffffffffffffff166373cc01546002846040518363ffffffff1660e01b81526004016105d1929190611774565b602060405180830381865afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061291906117d0565b905061061d81610a47565b9350505050919050565b60006106368260000151610a51565b9050919050565b60006106498383610a65565b905092915050565b606061068760007f0000000000000000000000000000000000000000000000000000000000000000610ade90919063ffffffff16565b905090565b60606106c260017f0000000000000000000000000000000000000000000000000000000000000000610ade90919063ffffffff16565b905090565b60006106d38383610b8e565b905092915050565b60606106e6836109c9565b6106f7576106f460006109d6565b92505b600083905061070860028285610c06565b91505092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561078d57507f000000000000000000000000000000000000000000000000000000000000000046145b156107ba577f000000000000000000000000000000000000000000000000000000000000000090506107c5565b6107c2610cbc565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000806000604184510361084e5760008060006020870151925060408701519150606087015160001a905061084088828585610d52565b95509550955050505061085e565b60006002855160001b9250925092505b9250925092565b60006003811115610879576108786117fd565b5b82600381111561088c5761088b6117fd565b5b03156109c557600160038111156108a6576108a56117fd565b5b8260038111156108b9576108b86117fd565b5b036108f0576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610904576109036117fd565b5b826003811115610917576109166117fd565b5b0361095c578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401610953919061135e565b60405180910390fd5b60038081111561096f5761096e6117fd565b5b826003811115610982576109816117fd565b5b036109c457806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016109bb919061182c565b60405180910390fd5b5b5050565b6000808214159050919050565b60006109e3826002610e46565b9050919050565b6060602067ffffffffffffffff811115610a0757610a06611120565b5b6040519080825280601f01601f191660200182016040528015610a395781602001600182028036833780820191505090505b509050816020820152919050565b6000819050919050565b6000610a5e826002610ee8565b9050919050565b6000610a70836109c9565b610a8157610a7e60006109d6565b92505b610a8a826109c9565b610a9b57610a9860006109d6565b91505b600083905060008390506000610ad060028484608073ffffffffffffffffffffffffffffffffffffffff16631f4cda2f610f82565b905080935050505092915050565b606060ff60001b8314610afb57610af483611016565b9050610b88565b818054610b0790611876565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3390611876565b8015610b805780601f10610b5557610100808354040283529160200191610b80565b820191906000526020600020905b815481529060010190602001808311610b6357829003601f168201915b505050505090505b92915050565b6000610b99836109c9565b610baa57610ba760006109d6565b92505b610bb3826109c9565b610bc457610bc160006109d6565b91505b600083905060008390506000610bf860028484608073ffffffffffffffffffffffffffffffffffffffff16622df619610f82565b905080935050505092915050565b6060608073ffffffffffffffffffffffffffffffffffffffff1663a1848ff385610c2f866109ea565b85604051602001610c4091906118c8565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610c6d939291906118e3565b600060405180830381865afa158015610c8a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cb391906119c9565b90509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610d37959493929190611a12565b60405160208183030381529060405280519060200120905090565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610d92576000600385925092509250610e3c565b600060018888888860405160008152602001604052604051610db79493929190611a65565b6020604051602081039080840390855afa158015610dd9573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e2d57600060016000801b93509350935050610e3c565b8060008060001b935093509350505b9450945094915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c4610e70866109ea565b856040518363ffffffff1660e01b8152600401610e8e929190611aaa565b600060405180830381865afa158015610eab573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ed49190611b4a565b9050610edf8161108a565b91505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff16635fa55ca784866040518363ffffffff1660e01b8152600401610f28929190611774565b600060405180830381865afa158015610f45573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f6e9190611b4a565b9050610f798161108a565b91505092915050565b60006060838388610f92896109ea565b610f9b896109ea565b6040518463ffffffff1660e01b8152600401610fb9939291906118e3565b600060405180830381865afa158015610fd6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610fff9190611b4a565b905061100a81611098565b91505095945050505050565b60606000611023836110a6565b90506000602067ffffffffffffffff81111561104257611041611120565b5b6040519080825280601f01601f1916602001820160405280156110745781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600060208201519050919050565b600060208201519050919050565b60008060ff8360001c169050601f8111156110ed576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111588261110f565b810181811067ffffffffffffffff8211171561117757611176611120565b5b80604052505050565b600061118a6110f6565b9050611196828261114f565b919050565b600080fd5b6000819050919050565b6111b3816111a0565b81146111be57600080fd5b50565b6000813590506111d0816111aa565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156111fb576111fa611120565b5b6112048261110f565b9050602081019050919050565b82818337600083830152505050565b600061123361122e846111e0565b611180565b90508281526020810184848401111561124f5761124e6111db565b5b61125a848285611211565b509392505050565b600082601f830112611277576112766111d6565b5b8135611287848260208601611220565b91505092915050565b6000604082840312156112a6576112a561110a565b5b6112b06040611180565b905060006112c0848285016111c1565b600083015250602082013567ffffffffffffffff8111156112e4576112e361119b565b5b6112f084828501611262565b60208301525092915050565b60006020828403121561131257611311611100565b5b600082013567ffffffffffffffff8111156113305761132f611105565b5b61133c84828501611290565b91505092915050565b6000819050919050565b61135881611345565b82525050565b6000602082019050611373600083018461134f565b92915050565b600080fd5b60006020828403121561139457611393611379565b5b81905092915050565b6000602082840312156113b3576113b2611100565b5b600082013567ffffffffffffffff8111156113d1576113d0611105565b5b6113dd8482850161137e565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61141b816113e6565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561145b578082015181840152602081019050611440565b60008484015250505050565b600061147282611421565b61147c818561142c565b935061148c81856020860161143d565b6114958161110f565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114cb826114a0565b9050919050565b6114db816114c0565b82525050565b6114ea816111a0565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61152581611345565b82525050565b6000611537838361151c565b60208301905092915050565b6000602082019050919050565b600061155b826114f0565b61156581856114fb565b93506115708361150c565b8060005b838110156115a1578151611588888261152b565b975061159383611543565b925050600181019050611574565b5085935050505092915050565b600060e0820190506115c3600083018a611412565b81810360208301526115d58189611467565b905081810360408301526115e98188611467565b90506115f8606083018761134f565b61160560808301866114d2565b61161260a08301856114e1565b81810360c08301526116248184611550565b905098975050505050505050565b600060208201905061164760008301846114d2565b92915050565b600060208201905081810360008301526116678184611467565b905092915050565b600060408201905061168460008301856114e1565b61169160208301846114e1565b9392505050565b6000602082840312156116ae576116ad61110a565b5b6116b86020611180565b9050600082013567ffffffffffffffff8111156116d8576116d761119b565b5b6116e484828501611262565b60008301525092915050565b60006116fc3683611698565b9050919050565b600060ff82169050919050565b61171981611703565b82525050565b600081519050919050565b600082825260208201905092915050565b60006117468261171f565b611750818561172a565b935061176081856020860161143d565b6117698161110f565b840191505092915050565b60006040820190506117896000830185611710565b818103602083015261179b818461173b565b90509392505050565b6117ad81611345565b81146117b857600080fd5b50565b6000815190506117ca816117a4565b92915050565b6000602082840312156117e6576117e5611100565b5b60006117f4848285016117bb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208201905061184160008301846114e1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061188e57607f821691505b6020821081036118a1576118a0611847565b5b50919050565b6000819050919050565b6118c26118bd826111a0565b6118a7565b82525050565b60006118d482846118b1565b60208201915081905092915050565b60006060820190506118f86000830186611710565b818103602083015261190a818561173b565b9050818103604083015261191e818461173b565b9050949350505050565b600067ffffffffffffffff82111561194357611942611120565b5b61194c8261110f565b9050602081019050919050565b600061196c61196784611928565b611180565b905082815260208101848484011115611988576119876111db565b5b61199384828561143d565b509392505050565b600082601f8301126119b0576119af6111d6565b5b81516119c0848260208601611959565b91505092915050565b6000602082840312156119df576119de611100565b5b600082015167ffffffffffffffff8111156119fd576119fc611105565b5b611a098482850161199b565b91505092915050565b600060a082019050611a2760008301886114e1565b611a3460208301876114e1565b611a4160408301866114e1565b611a4e606083018561134f565b611a5b60808301846114d2565b9695505050505050565b6000608082019050611a7a60008301876114e1565b611a876020830186611710565b611a9460408301856114e1565b611aa160608301846114e1565b95945050505050565b60006040820190508181036000830152611ac4818561173b565b9050611ad36020830184611710565b9392505050565b6000611aed611ae8846111e0565b611180565b905082815260208101848484011115611b0957611b086111db565b5b611b1484828561143d565b509392505050565b600082601f830112611b3157611b306111d6565b5b8151611b41848260208601611ada565b91505092915050565b600060208284031215611b6057611b5f611100565b5b600082015167ffffffffffffffff811115611b7e57611b7d611105565b5b611b8a84828501611b1c565b9150509291505056fea2646970667358221220968c63ddf9ebf802a367d0d13c2170ddea334745b75e74a414fbea6e2b0a281464736f6c63430008180033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Counter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Counter__factory {
    return super.connect(runner) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new Interface(_abi) as CounterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Counter {
    return new Contract(address, _abi, runner) as unknown as Counter;
  }
}
